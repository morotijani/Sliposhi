service: () -> {
    addProduct: (record {attachmentURL:text; title:text; description:text; price:nat64; location:text}) -> (variant {Ok:record {id:text; attachmentURL:text; title:text; soldAmount:nat64; createdAt:nat64; description:text; seller:principal; updatedAt:opt nat64; price:nat64; location:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addUser: (record {attachmentURL:text; username:text; email:text; internet_identity:text}) -> (variant {Ok:record {id:text; attachmentURL:text; username:text; createdAt:nat64; email:text; updatedAt:opt nat64; internet_identity:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    completePurchase: (principal, text, nat64, nat64, nat64) -> (variant {Ok:record {status:variant {PaymentPending:text; Completed:text}; memo:nat64; createdAt:nat64; productId:text; seller:principal; updatedAt:opt nat64; price:nat64; paid_at_block:opt nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    createOrder: (text) -> (variant {Ok:record {status:variant {PaymentPending:text; Completed:text}; memo:nat64; createdAt:nat64; productId:text; seller:principal; updatedAt:opt nat64; price:nat64; paid_at_block:opt nat64}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    deleteProduct: (text) -> (variant {Ok:text; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    deleteUser: (text) -> (variant {Ok:record {id:text; attachmentURL:text; username:text; createdAt:nat64; email:text; updatedAt:opt nat64; internet_identity:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    getAddressFromPrincipal: (principal) -> (text) query;
    getOrders: () -> (vec record {status:variant {PaymentPending:text; Completed:text}; memo:nat64; createdAt:nat64; productId:text; seller:principal; updatedAt:opt nat64; price:nat64; paid_at_block:opt nat64}) query;
    getPendingOrders: () -> (vec record {status:variant {PaymentPending:text; Completed:text}; memo:nat64; createdAt:nat64; productId:text; seller:principal; updatedAt:opt nat64; price:nat64; paid_at_block:opt nat64}) query;
    getProduct: (text) -> (variant {Ok:record {id:text; attachmentURL:text; title:text; soldAmount:nat64; createdAt:nat64; description:text; seller:principal; updatedAt:opt nat64; price:nat64; location:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getProducts: () -> (vec record {id:text; attachmentURL:text; title:text; soldAmount:nat64; createdAt:nat64; description:text; seller:principal; updatedAt:opt nat64; price:nat64; location:text}) query;
    getUser: (text) -> (variant {Ok:record {id:text; attachmentURL:text; username:text; createdAt:nat64; email:text; updatedAt:opt nat64; internet_identity:text}; Err:variant {InvalidPayload:text; NotFound:text}}) query;
    getUserId: (text) -> (variant {Ok:record {id:text; attachmentURL:text; username:text; createdAt:nat64; email:text; updatedAt:opt nat64; internet_identity:text}; Err:variant {InvalidPayload:text; NotFound:text}}) query;
    getUsers: () -> (vec record {id:text; attachmentURL:text; username:text; createdAt:nat64; email:text; updatedAt:opt nat64; internet_identity:text}) query;
    makePayment: (text, nat64) -> (variant {Ok:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateProduct: (record {id:text; attachmentURL:text; title:text; soldAmount:nat64; createdAt:nat64; description:text; seller:principal; updatedAt:opt nat64; price:nat64; location:text}) -> (variant {Ok:record {id:text; attachmentURL:text; title:text; soldAmount:nat64; createdAt:nat64; description:text; seller:principal; updatedAt:opt nat64; price:nat64; location:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateUser: (text, record {attachmentURL:text; username:text; email:text; internet_identity:text}) -> (variant {Ok:record {id:text; attachmentURL:text; username:text; createdAt:nat64; email:text; updatedAt:opt nat64; internet_identity:text}; Err:variant {InvalidPayload:text; NotFound:text}});
    verifyPayment: (principal, nat64, nat64, nat64) -> (bool) query;
}
